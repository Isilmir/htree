openapi: 3.0.0

info:
 title: HTree API
 version: 1.0.0
 description: CRUD operations via tree-based structures

servers:
 - url: /pg

tags:
 - name: Structure 
   description: working with structures itself
 - name: Tree
   description: operations with tree data 
 - name: Properties
   description: work with node's properties

paths:
 /structure:
  post:
   summary: Create structure
   tags:
    - Structure
   requestBody:
    required: true
    content:
     application/json:
      schema:
       $ref: '#/components/schemas/setStructureRequest'
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/createStructureResponse'  
    500:
     description: server error text  
    400:
     description: client error text              
  get:
   summary: get structure list
   tags:
    - Structure
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/structureResponse'   
    500:
     description: server error text  
    400:
     description: client error text          
 /tree/node:
  post:
   summary: Create tree node for existing structure
   tags:
    - Tree   
   requestBody:
    required: true
    content:
     application/json:
      schema:
       $ref: '#/components/schemas/setTreeNode'
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/setTreeNodeResponse'    
    500:
     description: server error text  
    400:
     description: client error text           
  put:
   summary: change tree node position and name
   tags:
    - Tree   
   requestBody:
    required: true
    content:
     application/json:
      schema:
       $ref: '#/components/schemas/updateTreeNode'
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/treeNodeResponse'   
    500:
     description: server error text  
    400:
     description: client error text              
 /tree/node/{id}:
  get:
   summary: get node by id
   tags:
    - Tree   
   parameters:
    - name: id
      in: path
      schema:
       type: string
      required: true
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/treeNodeResponse' 
    500:
     description: server error text  
    400:
     description: client error text               
  delete:
   summary: delete node by id
   tags:
    - Tree   
   parameters:
    - name: id
      in: path
      schema:
       type: string
      required: true
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/treeNodeResponse'
    500:
     description: server error text  
    400:
     description: client error text                  
 /tree/{structureid}:
  get:
   summary: get whole tree for structure
   tags:
    - Tree   
   parameters:
    - name: structureid
      in: path
      schema:
       type: string
      required: true
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/getTreeResponse'  
    500:
     description: server error text  
    400:
     description: client error text           
 /tree/{structureid}/{nodeid}:
  get:
   summary: get tree from node
   tags:
    - Tree   
   parameters:
    - name: structureid
      in: path
      schema:
       type: string
      required: true
    - name: nodeid
      in: path
      schema:
       type: string
      required: true      
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/getTreeResponse'  
    500:
     description: server error text  
    400:
     description: client error text                   
 /property:
  post:
   summary: create property for node
   tags:
    - Properties   
   requestBody:
    required: true
    content:
     application/json:
      schema:
       $ref: '#/components/schemas/setProperty'
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/propertyResponse'  
    500:
     description: server error text  
    400:
     description: client error text          
  put:
   summary: update property
   tags:
    - Properties
   requestBody: 
    required: true
    content:
     application/json:
      schema:
       $ref: '#/components/schemas/updateProperty'
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/propertyResponse'  
    500:
     description: server error text  
    400:
     description: client error text          
 /property/{treeid}:
  get:
   summary: get properties for node by node id
   tags:
    - Properties   
   parameters:
    - name: treeid
      in: path
      schema:
       type: string
      required: true
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/propertyResponseArray'  
    500:
     description: server error text  
    400:
     description: client error text             
 /property/{id}:
  delete:
   summary: delete property
   tags:
    - Properties   
   parameters:
    - name: id
      in: path
      schema:
       type: string
      required: true
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/propertyResponse' 
    500:
     description: server error text  
    400:
     description: client error text               
 /property/types/{structureid}:
  get:
   summary: get all types for structure
   tags:
    - Properties   
   parameters:
    - name: structureid
      in: path
      schema:
       type: string
      required: true
   responses:
    200:
     description: success     
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/propertyResponseArray'  
    500:
     description: server error text  
    400:
     description: client error text                
              
     

components:
 schemas:
  setStructureRequest:
   type: object
   properties:
    name:
     type: string
     example: Tree
  setTreeNode:
   type: object
   properties:
    structureid:
     type: integer
    parentid:
     type: integer   
    name:
     type: string 
    properties:
     type: array
     items:
       type: object
       properties:
        type:
         type: string 
        key:
         type: string                   
        value:
         type: string       
  setTreeNodeResponse:
   type: object
   properties:
    id:
     type: integer
    structureid:
     type: integer
    parentid:
     type: integer   
    name:
     type: string 
    order:
     type: integer      
    properties:
     type: array
     items:
       type: object
       properties:
        id:
         type: integer
        type:
         type: string 
        key:
         type: string                   
        value:
         type: string  
  getTreeResponse:
   type: array
   items:
    $ref: '#/components/schemas/setTreeNodeResponse'     
  treeNodeResponse:
   type: object
   properties:
    id:
     type: integer
    structureid:
     type: integer
    parentid:
     type: integer   
    name:
     type: string 
    order:
     type: integer                               
  updateTreeNode:
   type: object
   properties:
    id:
     type: string
    name:
     type: string
    parentid:
     type: string      
  setProperty:
   type: object
   properties:
    nodeid:
     type: integer 
    structureid:
     type: integer 
    type:
     type: string          
    key:
     type: string       
    value:
     type: string 
  propertyResponse:
   type: object
   properties:
    id:
     type: integer
    nodeid:
     type: integer 
    structureid:
     type: integer 
    type:
     type: string          
    key:
     type: string       
    value:
     type: string   
  propertyResponseArray:
   type: array
   items:
    $ref: '#/components/schemas/propertyResponse'                    
  updateProperty:
   type: object
   properties:
    id:
     type: integer
    nodeid:
     type: integer 
    structureid:
     type: integer 
    type:
     type: string          
    key:
     type: string       
    value:
     type: string 
  createStructureResponse:
   type: object
   properties:
    id:
     type: integer
    name:
     type: string          
  structureResponse:   
   type: array
   items: 
    $ref: '#/components/schemas/createStructureResponse'
       
   